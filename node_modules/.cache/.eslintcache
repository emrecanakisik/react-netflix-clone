[{"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\index.tsx":"1","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\App.tsx":"2","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\pages\\GetStarted.tsx":"3","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\NetflixLogo.tsx":"4","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\contexts\\GetStartedLangContext.tsx":"5","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\EmailForm.tsx":"6","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\main\\Main.tsx":"7","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\main\\MainItem.tsx":"8","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\header\\Header.tsx":"9","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\FAQ\\FAQ.tsx":"10","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\FAQ\\FAQItem.tsx":"11","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\footer\\Footer.tsx":"12","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\footer\\FooterItem.tsx":"13","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\pages\\Login.tsx":"14","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\LoginForm.tsx":"15","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\LoginInput.tsx":"16","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\contexts\\LoginLangContext.tsx":"17","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\SignInBtn.tsx":"18","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\navbar\\Navbar.tsx":"19","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\navbar\\SingInBtn.tsx":"20","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\SelectLang.tsx":"21"},{"size":530,"mtime":1678179219999,"results":"22","hashOfConfig":"23"},{"size":1279,"mtime":1678994155932,"results":"24","hashOfConfig":"23"},{"size":770,"mtime":1679001252369,"results":"25","hashOfConfig":"23"},{"size":2362,"mtime":1678208722992,"results":"26","hashOfConfig":"23"},{"size":9271,"mtime":1678993691284,"results":"27","hashOfConfig":"23"},{"size":1995,"mtime":1678834027207,"results":"28","hashOfConfig":"23"},{"size":1893,"mtime":1678833990363,"results":"29","hashOfConfig":"23"},{"size":1867,"mtime":1678833980904,"results":"30","hashOfConfig":"23"},{"size":1154,"mtime":1678834100208,"results":"31","hashOfConfig":"23"},{"size":796,"mtime":1678833296674,"results":"32","hashOfConfig":"23"},{"size":987,"mtime":1679001001150,"results":"33","hashOfConfig":"23"},{"size":980,"mtime":1679001401530,"results":"34","hashOfConfig":"23"},{"size":322,"mtime":1678833904722,"results":"35","hashOfConfig":"23"},{"size":731,"mtime":1679002118320,"results":"36","hashOfConfig":"23"},{"size":1750,"mtime":1679008712652,"results":"37","hashOfConfig":"23"},{"size":1774,"mtime":1679002740553,"results":"38","hashOfConfig":"23"},{"size":1376,"mtime":1678993790164,"results":"39","hashOfConfig":"23"},{"size":295,"mtime":1678999947847,"results":"40","hashOfConfig":"23"},{"size":629,"mtime":1679001380999,"results":"41","hashOfConfig":"23"},{"size":432,"mtime":1678918166275,"results":"42","hashOfConfig":"23"},{"size":1488,"mtime":1679001380977,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1aw2yvs",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"47"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"47"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\index.tsx",[],[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\App.tsx",["115","116","117","118","119"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Login from \"./pages/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path={GSLang.link}\n          element={\n            <GetStarted\n              isLang={isLang}\n              setIsLang={setIsLang}\n              lang={GSLang}\n              setLang={setGSLang}\n            />\n          }\n        />\n        <Route\n          path=\"/login\"\n          element={\n            <Login\n              isLang={isLang}\n              setIsLang={setIsLang}\n              lang={LoginLang}\n              setLang={setLoginLang}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\pages\\GetStarted.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\NetflixLogo.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\contexts\\GetStartedLangContext.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\EmailForm.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\main\\Main.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\main\\MainItem.tsx",["120"],[],"import React, { FC, useContext } from \"react\";\r\n\r\ntype img_video = {\r\n  sectionH1: string;\r\n  sectionH2: string;\r\n  img1src: string;\r\n  img2src?: string;\r\n  img3src?: string;\r\n  videosrc?: string;\r\n  imgSide: \"left\" | \"right\";\r\n  videoClass?: string;\r\n  miniBoxH1?: string;\r\n  miniBoxH2?: string;\r\n};\r\n\r\nconst MainItem: FC<img_video> = ({\r\n  sectionH1,\r\n  sectionH2,\r\n  img1src,\r\n  img2src,\r\n  img3src,\r\n  videosrc,\r\n  imgSide,\r\n  videoClass,\r\n  miniBoxH1,\r\n  miniBoxH2,\r\n}) => {\r\n  return (\r\n    /* px-[23rem] */\r\n    <div\r\n      className={`flex ${\r\n        imgSide === \"right\" ? \"flex-row-reverse\" : \"flex-row\"\r\n      } px-[22.75rem] justify-between items-center`}\r\n    >\r\n      <div className=\"relative min-w-[36.3rem] h-[27.2rem]\">\r\n        <img src={img1src} alt=\"\" className=\"h-full relative z-20\" />\r\n        {videosrc ? (\r\n          <video\r\n            src={videosrc}\r\n            className={videoClass}\r\n            loop\r\n            autoPlay\r\n            muted\r\n          ></video>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {img2src ? (\r\n          <div className=\"phn-download absolute bottom-7 bg-black left-1/4 flex justify-between items-center w-72 px-3 py-2 rounded-xl border-2 border-zinc-700 z-20\">\r\n            <img src={img2src} alt=\"\" className={\"h-20\"} />\r\n            <div className=\"flex-1 flex flex-col ml-4\">\r\n              <h1 className=\"font-medium text-white\">{miniBoxH1}</h1>\r\n              <h2 className=\"text-sm text-blue-600\">{miniBoxH2}</h2>\r\n            </div>\r\n            <img src={img3src} alt=\"\" className={\"w-12\"} />\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <div className=\"w-[36.3rem] text-white\">\r\n        <h1 className=\"text-5xl font-bold\">{sectionH1}</h1>\r\n        <h2 className=\"text-2xl mt-4\">{sectionH2}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainItem;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\header\\Header.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\FAQ\\FAQ.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\FAQ\\FAQItem.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\footer\\Footer.tsx",["121"],[],"import React, { useContext } from \"react\";\r\nimport { GSLangContext } from \"../../../contexts/GetStartedLangContext\";\r\nimport SelectLang from \"../SelectLang\";\r\nimport FooterItem from \"./FooterItem\";\r\n\r\nconst Footer = ({ isLang, setIsLang, setLang }: any) => {\r\n  const footer = useContext(GSLangContext).footer;\r\n  return (\r\n    <footer className=\"px-[31.9697rem] py-10 flex flex-col text-NetflixMidGray bg-black\">\r\n      <div className=\"mb-7\">\r\n        {footer.phoneNumForQues.title}\r\n        <a href=\"#\" className=\"hover:underline\">\r\n          {footer.phoneNumForQues.number}\r\n        </a>\r\n      </div>\r\n      <ul className=\"footer-items flex flex-wrap\">\r\n        {footer.items.map((item, index) => (\r\n          <FooterItem title={item} key={index} />\r\n        ))}\r\n      </ul>\r\n      <SelectLang isLang={isLang} setIsLang={setIsLang} setLang={setLang} />\r\n      <p className=\"my-3 text-sm font-medium\">Netflix Nederlands</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\footer\\FooterItem.tsx",["122"],[],"import React, { FC } from \"react\";\r\ntype footerItemTitle = { title: string };\r\nconst FooterItem: FC<footerItemTitle> = ({ title }) => {\r\n  return (\r\n    <li className=\"w-52 mr-3 mb-4\">\r\n      <a href=\"#\" className=\"text-sm hover:underline\">\r\n        {title}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FooterItem;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\pages\\Login.tsx",["123","124"],[],"import React, { useContext } from \"react\";\r\nimport NetflixLogo from \"../components/NetflixLogo\";\r\nimport bgImg from \"../assets/begin-page/header-img.jpg\";\r\nimport LoginForm from \"../components/Login/form/LoginForm\";\r\n\r\nimport LoginLangContProv, { loginPageLang } from \"../contexts/LoginLangContext\";\r\n\r\nconst Login = ({ isLang, setIsLang, lang, setLang }: any) => {\r\n  return (\r\n    <LoginLangContProv provValue={lang}>\r\n      <img\r\n        src={bgImg}\r\n        alt=\"\"\r\n        className=\"absolute -z-10 brightness-50 object-cover w-full h-[53rem]\"\r\n      />\r\n      <nav className=\"px-14 py-6 relative z-10\">\r\n        <NetflixLogo />\r\n      </nav>\r\n      <LoginForm />\r\n    </LoginLangContProv>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\LoginForm.tsx",["125","126","127"],[],"import React, { useContext } from \"react\";\r\nimport { LoginLangContext } from \"../../../contexts/LoginLangContext\";\r\nimport LoginInput from \"./LoginInput\";\r\nimport SignInBtn from \"./SignInBtn\";\r\n\r\nconst LoginForm = () => {\r\n  const form = useContext(LoginLangContext).form;\r\n  return (\r\n    <div className=\"bg-black rounded text-white w-[28rem] h-[42.5rem] px-[4.25rem] py-[3.75rem] mx-auto\">\r\n      <h1 className=\"text-[2rem] mb-7 font-medium\">{form.H1}</h1>\r\n      <LoginInput\r\n        inputType=\"email\"\r\n        id=\"loginEmail\"\r\n        labelContent={form.input.label.email}\r\n        spanContent={form.input.error.email}\r\n      />\r\n      <LoginInput\r\n        inputType=\"password\"\r\n        id=\"loginpass\"\r\n        labelContent={form.input.label.pass}\r\n        spanContent={form.input.error.pass}\r\n      />\r\n      <SignInBtn btnTitle={form.submitBtn} />\r\n      <div className=\"checkbox-login_help w-full flex justify-between text-[13px] text-smallTextGray\">\r\n        <div id=\"remember-me\">\r\n          <input type=\"checkbox\" name=\"\" id=\"remember_me\" />\r\n          <label htmlFor=\"remember_me\">{form.checkbox}</label>\r\n        </div>\r\n        <a href=\"\" className=\"hover:underline\">\r\n          {form.loginHelp}\r\n        </a>\r\n      </div>\r\n      <h3 className=\"mt-4 text-smallTextGray\">\r\n        {form.newToNetflix.H2}{\" \"}\r\n        <a href=\"\" className=\"text-white hover:underline\">\r\n          {form.newToNetflix.a}\r\n        </a>\r\n      </h3>\r\n      <div className=\"reCAPTCHA text-smallTextGray\">\r\n        <p className=\"text-[13px] my-3\">\r\n          {form.reCAPTCHA.p}{\" \"}\r\n          <a href=\"\" className=\"text-blue-600\">\r\n            {form.reCAPTCHA.a}\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\LoginInput.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\contexts\\LoginLangContext.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\Login\\form\\SignInBtn.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\navbar\\Navbar.tsx",[],[],"C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\navbar\\SingInBtn.tsx",["128"],[],"import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GSLangContext } from \"../../../contexts/GetStartedLangContext\";\r\n\r\nconst SingInBtn = () => {\r\n  const signInBtn = useContext(GSLangContext).signInBtn;\r\n  console.log();\r\n\r\n  return (\r\n    <a href=\"/login\" className=\"py-2 px-4 rounded text-white bg-NetflixRed\">\r\n      {signInBtn}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default SingInBtn;\r\n","C:\\Users\\emrec\\Desktop\\react-netflix-clone\\src\\components\\GetStarted\\SelectLang.tsx",[],[],{"ruleId":"129","severity":1,"message":"130","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"133","line":5,"column":25,"nodeType":"131","messageId":"132","endLine":5,"endColumn":29},{"ruleId":"129","severity":1,"message":"134","line":5,"column":31,"nodeType":"131","messageId":"132","endLine":5,"endColumn":38},{"ruleId":"129","severity":1,"message":"135","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":22},{"ruleId":"129","severity":1,"message":"136","line":15,"column":9,"nodeType":"131","messageId":"132","endLine":15,"endColumn":17},{"ruleId":"129","severity":1,"message":"137","line":1,"column":21,"nodeType":"131","messageId":"132","endLine":1,"endColumn":31},{"ruleId":"138","severity":1,"message":"139","line":12,"column":9,"nodeType":"140","endLine":12,"endColumn":49},{"ruleId":"138","severity":1,"message":"139","line":6,"column":7,"nodeType":"140","endLine":6,"endColumn":55},{"ruleId":"129","severity":1,"message":"137","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":27},{"ruleId":"129","severity":1,"message":"141","line":6,"column":29,"nodeType":"131","messageId":"132","endLine":6,"endColumn":42},{"ruleId":"138","severity":1,"message":"139","line":29,"column":9,"nodeType":"140","endLine":29,"endColumn":48},{"ruleId":"138","severity":1,"message":"139","line":35,"column":9,"nodeType":"140","endLine":35,"endColumn":59},{"ruleId":"138","severity":1,"message":"139","line":42,"column":11,"nodeType":"140","endLine":42,"endColumn":48},{"ruleId":"129","severity":1,"message":"142","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":21},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'NavLink' is defined but never used.","'GSLangContProv' is defined but never used.","'navigate' is assigned a value but never used.","'useContext' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'loginPageLang' is defined but never used.","'useNavigate' is defined but never used."]