{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [lang, setLang] = useState(getStartedPageLang.english);\n  console.log(lang.signInBtn);\n  const navigate = useNavigate();\n  useEffect(() => {\n    /* navigate(\"/nl-en\"); */\n    console.log(isLang);\n  }, [isLang]);\n  return /*#__PURE__*/_jsxDEV(GSLangContProv, {\n    provValue: {\n      lang,\n      isLang,\n      setIsLang\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: lang.link,\n        element: /*#__PURE__*/_jsxDEV(GetStarted, {\n          isLang: isLang,\n          setIsLang: setIsLang,\n          lang: lang,\n          setLang: setLang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I5uwyS5UzTGxs+jA5THovNtCs+0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GetStarted","Routes","Route","useNavigate","GSLangContProv","getStartedPageLang","jsxDEV","_jsxDEV","App","_s","isLang","setIsLang","lang","setLang","english","console","log","signInBtn","navigate","provValue","children","path","link","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [lang, setLang] = useState(getStartedPageLang.english);\n  console.log(lang.signInBtn);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    /* navigate(\"/nl-en\"); */\n    console.log(isLang);\n  }, [isLang]);\n\n  return (\n    <GSLangContProv provValue={{ lang, isLang, setIsLang }}>\n      <Routes>\n        <Route\n          path={lang.link}\n          element={\n            <GetStarted\n              isLang={isLang}\n              setIsLang={setIsLang}\n              lang={lang}\n              setLang={setLang}\n            />\n          }\n        />\n      </Routes>\n    </GSLangContProv>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,MAAM,EAAEC,KAAK,EAAiBC,WAAW,QAAQ,kBAAkB;AAC5E,OAAOC,cAAc,IACnBC,kBAAkB,QACb,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACO,kBAAkB,CAACS,OAAO,CAAC;EAC5DC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,SAAS,CAAC;EAC3B,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAE9BJ,SAAS,CAAC,MAAM;IACd;IACAgB,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACrB,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,oBACEH,OAAA,CAACH,cAAc;IAACe,SAAS,EAAE;MAAEP,IAAI;MAAEF,MAAM;MAAEC;IAAU,CAAE;IAAAS,QAAA,eACrDb,OAAA,CAACN,MAAM;MAAAmB,QAAA,eACLb,OAAA,CAACL,KAAK;QACJmB,IAAI,EAAET,IAAI,CAACU,IAAK;QAChBC,OAAO,eACLhB,OAAA,CAACP,UAAU;UACTU,MAAM,EAAEA,MAAO;UACfC,SAAS,EAAEA,SAAU;UACrBC,IAAI,EAAEA,IAAK;UACXC,OAAO,EAAEA;QAAQ;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAEpB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAErB;AAAClB,EAAA,CA5BQD,GAAG;EAAA,QAIOL,WAAW;AAAA;AAAAyB,EAAA,GAJrBpB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}