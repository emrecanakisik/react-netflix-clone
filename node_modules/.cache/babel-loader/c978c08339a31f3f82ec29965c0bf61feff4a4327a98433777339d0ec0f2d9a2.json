{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: GSLang.link,\n        element: /*#__PURE__*/_jsxDEV(GetStartedLoginLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 44\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(GetStarted, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MX+uh6GfcEmOd/O2D4PaVpTLoec=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GetStarted","Login","Routes","Route","useNavigate","getStartedPageLang","loginPageLang","GetStartedLoginLayout","jsxDEV","_jsxDEV","App","_s","isLang","setIsLang","GSLang","setGSLang","english","LoginLang","setLoginLang","navigate","children","path","link","element","fileName","_jsxFileName","lineNumber","columnNumber","index","loginLang","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login\";\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return (\n    <div>\n      <Routes>\n        <Route path={GSLang.link} element={<GetStartedLoginLayout />}>\n          <Route\n            index={true}\n            element={\n              <GetStarted\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n          <Route\n            path=\"/login\"\n            element={\n              <Login\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,qCAAqC;AAC5D,OAAOC,KAAK,MAAM,gCAAgC;AAClD,SAASC,MAAM,EAAEC,KAAK,EAAiBC,WAAW,QAAQ,kBAAkB;AAC5E,SACEC,kBAAkB,QACb,kCAAkC;AACzC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,OAAOC,qBAAqB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACM,kBAAkB,CAACW,OAAO,CAAC;EAChE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAACO,aAAa,CAACU,OAAO,CAAC;EACjE,MAAMG,QAAQ,GAAGf,WAAW,EAAE;;EAE9B;AACF;AACA;;EAEE,oBACEK,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACP,MAAM;MAAAkB,QAAA,eACLX,OAAA,CAACN,KAAK;QAACkB,IAAI,EAAEP,MAAM,CAACQ,IAAK;QAACC,OAAO,eAAEd,OAAA,CAACF,qBAAqB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QAAAP,QAAA,gBAC3DX,OAAA,CAACN,KAAK;UACJyB,KAAK,EAAE,IAAK;UACZL,OAAO,eACLd,OAAA,CAACT,UAAU;YACTY,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBC,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBc,SAAS,EAAEZ,SAAU;YACrBC,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE9B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACD,eACFlB,OAAA,CAACN,KAAK;UACJkB,IAAI,EAAC,QAAQ;UACbE,OAAO,eACLd,OAAA,CAACR,KAAK;YACJW,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBC,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBc,SAAS,EAAEZ,SAAU;YACrBC,YAAY,EAAEA;UAAa;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAE9B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAAChB,EAAA,CA5CQD,GAAG;EAAA,QAION,WAAW;AAAA;AAAA0B,EAAA,GAJrBpB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}