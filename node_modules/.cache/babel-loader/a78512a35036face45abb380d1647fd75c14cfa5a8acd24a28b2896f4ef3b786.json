{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst langContext = /*#__PURE__*/createContext(null);\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n  const langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    LoginLang,\n    setLoginLang\n  };\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(GetStartedError, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${GSLang.link}`,\n        element: /*#__PURE__*/_jsxDEV(GetStartedLoginLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 50\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(GetStarted, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(GetStartedError, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MX+uh6GfcEmOd/O2D4PaVpTLoec=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createContext","GetStarted","Login","Routes","Route","useNavigate","getStartedPageLang","loginPageLang","GetStartedLoginLayout","GetStartedError","jsxDEV","_jsxDEV","langContext","App","_s","isLang","setIsLang","GSLang","setGSLang","english","LoginLang","setLoginLang","navigate","langData","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","link","index","loginLang","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\n\nconst langContext = createContext(null);\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  const langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    LoginLang,\n    setLoginLang,\n  };\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return (\n    <div>\n      <Routes>\n        <Route path=\"*\" element={<GetStartedError />} />\n        <Route path={`/${GSLang.link}`} element={<GetStartedLoginLayout />}>\n          <Route\n            index={true}\n            element={\n              <GetStarted\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n          <Route\n            path=\"login\"\n            element={\n              <Login\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n          <Route path=\"*\" element={<GetStartedError />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}