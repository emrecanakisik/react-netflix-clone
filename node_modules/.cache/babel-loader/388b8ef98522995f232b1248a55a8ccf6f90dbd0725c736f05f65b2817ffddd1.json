{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\components\\\\GetStarted\\\\header\\\\SelectLang.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { getStartedPageLang } from \"../../../contexts/GetStartedLangContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectLang = _ref => {\n  _s();\n  let {\n    lang,\n    setLang\n  } = _ref;\n  const className = \"bg-gray-500 text-white\";\n  console.log(lang);\n  const navigate = useNavigate();\n  const switchLang = selectedLang => {\n    if (selectedLang === \"English\") {\n      setLang(getStartedPageLang.english);\n      navigate(\"/nl-en\");\n    } else {\n      setLang(getStartedPageLang.nederlands);\n      navigate(\"/nl\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative langSelect border inline-flex max-w-[8.05rem] justify-between items-center mr-8 rounded\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      id: \"langSel\",\n      defaultValue: \"English\",\n      onChange: e => switchLang(e.target.value),\n      className: \"outline-none appearance-none w-100 py-2 px-6 te text-white text-center text-sm font-normal bg-transparent focus:outline-white focus:outline-offset-0 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"English\",\n        className: className,\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Spanish\",\n        className: className,\n        children: \"Nederlands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectLang, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectLang;\nexport default SelectLang;\nvar _c;\n$RefreshReg$(_c, \"SelectLang\");","map":{"version":3,"names":["React","getStartedPageLang","useNavigate","jsxDEV","_jsxDEV","SelectLang","_ref","_s","lang","setLang","className","console","log","navigate","switchLang","selectedLang","english","nederlands","children","name","id","defaultValue","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/components/GetStarted/header/SelectLang.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getStartedPageLang } from \"../../../contexts/GetStartedLangContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SelectLang = ({ lang, setLang }: any) => {\r\n  const className = \"bg-gray-500 text-white\";\r\n  console.log(lang);\r\n  const navigate = useNavigate();\r\n\r\n  const switchLang = (selectedLang: string) => {\r\n    if (selectedLang === \"English\") {\r\n      setLang(getStartedPageLang.english);\r\n      navigate(\"/nl-en\");\r\n    } else {\r\n      setLang(getStartedPageLang.nederlands);\r\n      navigate(\"/nl\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative langSelect border inline-flex max-w-[8.05rem] justify-between items-center mr-8 rounded\">\r\n      <select\r\n        name=\"\"\r\n        id=\"langSel\"\r\n        defaultValue=\"English\"\r\n        onChange={(e) => switchLang(e.target.value)}\r\n        className=\"outline-none appearance-none w-100 py-2 px-6 te text-white text-center text-sm font-normal bg-transparent focus:outline-white focus:outline-offset-0 rounded\"\r\n      >\r\n        <option value=\"English\" className={className}>\r\n          English\r\n        </option>\r\n        <option value=\"Spanish\" className={className}>\r\n          Nederlands\r\n        </option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectLang;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,IAAI;IAAEC;EAAa,CAAC,GAAAH,IAAA;EACxC,MAAMI,SAAS,GAAG,wBAAwB;EAC1CC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACjB,MAAMK,QAAQ,GAAGX,WAAW,EAAE;EAE9B,MAAMY,UAAU,GAAIC,YAAoB,IAAK;IAC3C,IAAIA,YAAY,KAAK,SAAS,EAAE;MAC9BN,OAAO,CAACR,kBAAkB,CAACe,OAAO,CAAC;MACnCH,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLJ,OAAO,CAACR,kBAAkB,CAACgB,UAAU,CAAC;MACtCJ,QAAQ,CAAC,KAAK,CAAC;IACjB;EACF,CAAC;EAED,oBACET,OAAA;IAAKM,SAAS,EAAC,kGAAkG;IAAAQ,QAAA,eAC/Gd,OAAA;MACEe,IAAI,EAAC,EAAE;MACPC,EAAE,EAAC,SAAS;MACZC,YAAY,EAAC,SAAS;MACtBC,QAAQ,EAAGC,CAAC,IAAKT,UAAU,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC5Cf,SAAS,EAAC,8JAA8J;MAAAQ,QAAA,gBAExKd,OAAA;QAAQqB,KAAK,EAAC,SAAS;QAACf,SAAS,EAAEA,SAAU;QAAAQ,QAAA,EAAC;MAE9C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTzB,OAAA;QAAQqB,KAAK,EAAC,SAAS;QAACf,SAAS,EAAEA,SAAU;QAAAQ,QAAA,EAAC;MAE9C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACtB,EAAA,CAjCIF,UAAU;EAAA,QAGGH,WAAW;AAAA;AAAA4B,EAAA,GAHxBzB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}