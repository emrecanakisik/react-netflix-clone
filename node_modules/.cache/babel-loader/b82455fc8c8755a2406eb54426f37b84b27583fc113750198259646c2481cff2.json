{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\pages\\\\GetStarted-Login\\\\GetStarted.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/GetStarted/header/Header\";\nimport Main from \"../../components/GetStarted/main/Main\";\nimport Navbar from \"../../components/GetStarted/navbar/Navbar\";\nimport FAQ from \"../../components/GetStarted/FAQ/FAQ\";\nimport Footer from \"../../components/GetStarted/footer/Footer\";\nimport GSLangContProv from \"../../contexts/GetStartedLangContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStarted = _ref => {\n  _s();\n  let {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    setLoginLang\n  } = _ref;\n  const navigate = useNavigate();\n  /* useEffect(() => {\r\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\r\n  }, []); */\n  return /*#__PURE__*/_jsxDEV(GSLangContProv, {\n    provValue: GSLang,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLang: isLang,\n      setIsLang: setIsLang,\n      setGSLang: setGSLang,\n      setLoginLang: setLoginLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isLang: isLang,\n      setIsLang: setIsLang,\n      setGSLang: setGSLang,\n      setLoginLang: setLoginLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(GetStarted, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = GetStarted;\nexport default GetStarted;\nvar _c;\n$RefreshReg$(_c, \"GetStarted\");","map":{"version":3,"names":["React","useNavigate","Header","Main","Navbar","FAQ","Footer","GSLangContProv","jsxDEV","_jsxDEV","GetStarted","_ref","_s","isLang","setIsLang","GSLang","setGSLang","setLoginLang","navigate","provValue","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/pages/GetStarted-Login/GetStarted.tsx"],"sourcesContent":["import React, { FC, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/GetStarted/header/Header\";\r\nimport Main from \"../../components/GetStarted/main/Main\";\r\nimport Navbar from \"../../components/GetStarted/navbar/Navbar\";\r\nimport FAQ from \"../../components/GetStarted/FAQ/FAQ\";\r\nimport Footer from \"../../components/GetStarted/footer/Footer\";\r\nimport GSLangContProv from \"../../contexts/GetStartedLangContext\";\r\nimport { langprops } from \"../../App\";\r\n\r\nconst GetStarted: FC<langprops> = ({\r\n  isLang,\r\n  setIsLang,\r\n  GSLang,\r\n  setGSLang,\r\n  setLoginLang,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  /* useEffect(() => {\r\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\r\n  }, []); */\r\n  return (\r\n    <GSLangContProv provValue={GSLang}>\r\n      <Navbar\r\n        isLang={isLang}\r\n        setIsLang={setIsLang}\r\n        setGSLang={setGSLang}\r\n        setLoginLang={setLoginLang}\r\n      />\r\n      <Header />\r\n      <Main />\r\n      <FAQ />\r\n      <Footer\r\n        isLang={isLang}\r\n        setIsLang={setIsLang}\r\n        setGSLang={setGSLang}\r\n        setLoginLang={setLoginLang}\r\n      />\r\n    </GSLangContProv>\r\n  );\r\n};\r\n\r\nexport default GetStarted;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAyB,OAAO;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,IAAI,MAAM,uCAAuC;AACxD,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,GAAG,MAAM,qCAAqC;AACrD,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,OAAOC,cAAc,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlE,MAAMC,UAAyB,GAAGC,IAAA,IAM5B;EAAAC,EAAA;EAAA,IAN6B;IACjCC,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTC;EACF,CAAC,GAAAN,IAAA;EACC,MAAMO,QAAQ,GAAGjB,WAAW,EAAE;EAC9B;AACF;AACA;EACE,oBACEQ,OAAA,CAACF,cAAc;IAACY,SAAS,EAAEJ,MAAO;IAAAK,QAAA,gBAChCX,OAAA,CAACL,MAAM;MACLS,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBE,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B,eACFf,OAAA,CAACP,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVf,OAAA,CAACN,IAAI;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACRf,OAAA,CAACJ,GAAG;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACPf,OAAA,CAACH,MAAM;MACLO,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA,SAAU;MACrBE,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACa;AAErB,CAAC;AAACZ,EAAA,CA9BIF,UAAyB;EAAA,QAOZT,WAAW;AAAA;AAAAwB,EAAA,GAPxBf,UAAyB;AAgC/B,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}