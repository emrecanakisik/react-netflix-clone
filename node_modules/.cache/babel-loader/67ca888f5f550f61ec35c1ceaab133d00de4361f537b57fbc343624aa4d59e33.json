{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\components\\\\GetStarted\\\\SelectLang.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { getStartedPageLang } from \"../../contexts/GetStartedLangContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectLang = _ref => {\n  _s();\n  let {\n    isLang,\n    setIsLang,\n    setGSLang,\n    setLoginLang,\n    page\n  } = _ref;\n  const className = \"bg-gray-500 text-white\";\n  const navigate = useNavigate();\n  const switchLang = selectedLang => {\n    if (selectedLang === \"English\") {\n      setIsLang(selectedLang);\n      setGSLang(getStartedPageLang.english);\n      page === \"GetStarted\" && navigate(\"/nl-en\");\n    } else {\n      setIsLang(selectedLang);\n      setGSLang(getStartedPageLang.nederlands);\n      page === \"GetStarted\" && navigate(\"/nl\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative langSelect border inline-flex max-w-[7.75rem] justify-between items-center mr-8 rounded\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"\",\n      id: \"langSel\",\n      defaultValue: \"English\",\n      value: isLang,\n      onChange: e => switchLang(e.target.value),\n      className: \"lang-select flex-1 outline-none appearance-none w-100 py-2 px-6 te text-white text-center text-sm font-normal bg-transparent focus:outline-white focus:outline-offset-0 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"English\",\n        className: className,\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Spanish\",\n        className: className,\n        children: \"Nederlands\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectLang, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SelectLang;\nexport default SelectLang;\nvar _c;\n$RefreshReg$(_c, \"SelectLang\");","map":{"version":3,"names":["React","getStartedPageLang","useNavigate","jsxDEV","_jsxDEV","SelectLang","_ref","_s","isLang","setIsLang","setGSLang","setLoginLang","page","className","navigate","switchLang","selectedLang","english","nederlands","children","name","id","defaultValue","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/components/GetStarted/SelectLang.tsx"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport { getStartedPageLang } from \"../../contexts/GetStartedLangContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\ntype lang = {\r\n  isLang: string;\r\n  setIsLang: string;\r\n  setGSLang: string;\r\n  page: \"GetStarted\" | \"Login\";\r\n  setLoginLang: any;\r\n};\r\n\r\nconst SelectLang: FC<lang> = ({\r\n  isLang,\r\n  setIsLang,\r\n  setGSLang,\r\n  setLoginLang,\r\n  page,\r\n}: any) => {\r\n  const className = \"bg-gray-500 text-white\";\r\n  const navigate = useNavigate();\r\n\r\n  const switchLang = (selectedLang: string) => {\r\n    if (selectedLang === \"English\") {\r\n      setIsLang(selectedLang);\r\n      setGSLang(getStartedPageLang.english);\r\n      page === \"GetStarted\" && navigate(\"/nl-en\");\r\n    } else {\r\n      setIsLang(selectedLang);\r\n      setGSLang(getStartedPageLang.nederlands);\r\n      page === \"GetStarted\" && navigate(\"/nl\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative langSelect border inline-flex max-w-[7.75rem] justify-between items-center mr-8 rounded\">\r\n      <select\r\n        name=\"\"\r\n        id=\"langSel\"\r\n        defaultValue=\"English\"\r\n        value={isLang}\r\n        onChange={(e) => switchLang(e.target.value)}\r\n        className=\"lang-select flex-1 outline-none appearance-none w-100 py-2 px-6 te text-white text-center text-sm font-normal bg-transparent focus:outline-white focus:outline-offset-0 rounded\"\r\n      >\r\n        <option value=\"English\" className={className}>\r\n          English\r\n        </option>\r\n        <option value=\"Spanish\" className={className}>\r\n          Nederlands\r\n        </option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectLang;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAc,OAAO;AACjC,SAASC,kBAAkB,QAAQ,sCAAsC;AACzE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/C,MAAMC,UAAoB,GAAGC,IAAA,IAMlB;EAAAC,EAAA;EAAA,IANmB;IAC5BC,MAAM;IACNC,SAAS;IACTC,SAAS;IACTC,YAAY;IACZC;EACG,CAAC,GAAAN,IAAA;EACJ,MAAMO,SAAS,GAAG,wBAAwB;EAC1C,MAAMC,QAAQ,GAAGZ,WAAW,EAAE;EAE9B,MAAMa,UAAU,GAAIC,YAAoB,IAAK;IAC3C,IAAIA,YAAY,KAAK,SAAS,EAAE;MAC9BP,SAAS,CAACO,YAAY,CAAC;MACvBN,SAAS,CAACT,kBAAkB,CAACgB,OAAO,CAAC;MACrCL,IAAI,KAAK,YAAY,IAAIE,QAAQ,CAAC,QAAQ,CAAC;IAC7C,CAAC,MAAM;MACLL,SAAS,CAACO,YAAY,CAAC;MACvBN,SAAS,CAACT,kBAAkB,CAACiB,UAAU,CAAC;MACxCN,IAAI,KAAK,YAAY,IAAIE,QAAQ,CAAC,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,oBACEV,OAAA;IAAKS,SAAS,EAAC,kGAAkG;IAAAM,QAAA,eAC/Gf,OAAA;MACEgB,IAAI,EAAC,EAAE;MACPC,EAAE,EAAC,SAAS;MACZC,YAAY,EAAC,SAAS;MACtBC,KAAK,EAAEf,MAAO;MACdgB,QAAQ,EAAGC,CAAC,IAAKV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CV,SAAS,EAAC,iLAAiL;MAAAM,QAAA,gBAE3Lf,OAAA;QAAQmB,KAAK,EAAC,SAAS;QAACV,SAAS,EAAEA,SAAU;QAAAM,QAAA,EAAC;MAE9C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT1B,OAAA;QAAQmB,KAAK,EAAC,SAAS;QAACV,SAAS,EAAEA,SAAU;QAAAM,QAAA,EAAC;MAE9C;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACvB,EAAA,CAzCIF,UAAoB;EAAA,QAQPH,WAAW;AAAA;AAAA6B,EAAA,GARxB1B,UAAoB;AA2C1B,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}