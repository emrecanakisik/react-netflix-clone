{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Login from \"./pages/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const navigate = useNavigate();\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: lang.link,\n        element: /*#__PURE__*/_jsxDEV(GetStarted, {\n          isLang: isLang,\n          setIsLang: setIsLang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z2jya2qWFzC1J9K2ANWusYMORpo=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GetStarted","Login","Routes","Route","useNavigate","jsxDEV","_jsxDEV","App","_s","isLang","setIsLang","navigate","children","path","lang","link","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Login from \"./pages/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n\n  const navigate = useNavigate();\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path={lang.link}\n          element={<GetStarted isLang={isLang} setIsLang={setIsLang} />}\n        />\n        <Route path=\"/login\" element={<Login />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,MAAM,EAAEC,KAAK,EAAiBC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK7E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAE/C,MAAMY,QAAQ,GAAGP,WAAW,EAAE;;EAE9B;AACF;AACA;;EAEE,oBACEE,OAAA;IAAAM,QAAA,eACEN,OAAA,CAACJ,MAAM;MAAAU,QAAA,gBACLN,OAAA,CAACH,KAAK;QACJU,IAAI,EAAEC,IAAI,CAACC,IAAK;QAChBC,OAAO,eAAEV,OAAA,CAACN,UAAU;UAACS,MAAM,EAAEA,MAAO;UAACC,SAAS,EAAEA;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9D,eACFd,OAAA,CAACH,KAAK;QAACU,IAAI,EAAC,QAAQ;QAACG,OAAO,eAAEV,OAAA,CAACL,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACpC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACZ,EAAA,CApBQD,GAAG;EAAA,QAGOH,WAAW;AAAA;AAAAiB,EAAA,GAHrBd,GAAG;AAsBZ,eAAeA,GAAG;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}