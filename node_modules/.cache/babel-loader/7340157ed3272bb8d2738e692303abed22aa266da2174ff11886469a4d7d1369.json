{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const langContext = /*#__PURE__*/createContext({});\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n  const langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    LoginLang,\n    setLoginLang\n  };\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(langContext.Provider, {\n      value: langData,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(GetStartedError, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/${GSLang.link}`,\n          element: /*#__PURE__*/_jsxDEV(GetStartedLoginLayout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 52\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(GetStarted, {\n              isLang: isLang,\n              setIsLang: setIsLang,\n              GSLang: GSLang,\n              setGSLang: setGSLang,\n              loginLang: LoginLang,\n              setLoginLang: setLoginLang\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"login\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              isLang: isLang,\n              setIsLang: setIsLang,\n              GSLang: GSLang,\n              setGSLang: setGSLang,\n              loginLang: LoginLang,\n              setLoginLang: setLoginLang\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(GetStartedError, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MX+uh6GfcEmOd/O2D4PaVpTLoec=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createContext","GetStarted","Login","Routes","Route","useNavigate","getStartedPageLang","loginPageLang","GetStartedLoginLayout","GetStartedError","jsxDEV","_jsxDEV","langContext","App","_s","isLang","setIsLang","GSLang","setGSLang","english","LoginLang","setLoginLang","navigate","langData","children","Provider","value","path","element","fileName","_jsxFileName","lineNumber","columnNumber","link","index","loginLang","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\n\nexport const langContext = createContext({});\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  const langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    LoginLang,\n    setLoginLang,\n  };\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return (\n    <div>\n      <langContext.Provider value={langData}>\n        <Routes>\n          <Route path=\"*\" element={<GetStartedError />} />\n          <Route path={`/${GSLang.link}`} element={<GetStartedLoginLayout />}>\n            <Route\n              index={true}\n              element={\n                <GetStarted\n                  isLang={isLang}\n                  setIsLang={setIsLang}\n                  GSLang={GSLang}\n                  setGSLang={setGSLang}\n                  loginLang={LoginLang}\n                  setLoginLang={setLoginLang}\n                />\n              }\n            />\n            <Route\n              path=\"login\"\n              element={\n                <Login\n                  isLang={isLang}\n                  setIsLang={setIsLang}\n                  GSLang={GSLang}\n                  setGSLang={setGSLang}\n                  loginLang={LoginLang}\n                  setLoginLang={setLoginLang}\n                />\n              }\n            />\n            <Route path=\"*\" element={<GetStartedError />} />\n          </Route>\n        </Routes>\n      </langContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}