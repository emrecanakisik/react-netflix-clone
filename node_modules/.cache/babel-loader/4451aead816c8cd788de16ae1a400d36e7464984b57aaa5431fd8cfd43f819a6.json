{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\pages\\\\GetStarted.tsx\";\nimport React from \"react\";\nimport Header from \"../components/GetStarted/header/Header\";\nimport Main from \"../components/GetStarted/main/Main\";\nimport Navbar from \"../components/GetStarted/header/Navbar\";\nimport FAQ from \"../components/GetStarted/FAQ/FAQ\";\nimport Footer from \"../components/GetStarted/footer/Footer\";\nimport GSLangContProv from \"../contexts/GetStartedLangContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStarted = _ref => {\n  let {\n    isLang,\n    setIsLang,\n    setLang,\n    lang\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(GSLangContProv, {\n    provValue: lang,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      isLang: isLang,\n      setIsLang: setIsLang,\n      setLang: setLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FAQ, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      isLang: isLang,\n      setIsLang: setIsLang,\n      setLang: setLang\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = GetStarted;\nexport default GetStarted;\nvar _c;\n$RefreshReg$(_c, \"GetStarted\");","map":{"version":3,"names":["React","Header","Main","Navbar","FAQ","Footer","GSLangContProv","jsxDEV","_jsxDEV","GetStarted","_ref","isLang","setIsLang","setLang","lang","provValue","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/pages/GetStarted.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Header from \"../components/GetStarted/header/Header\";\r\nimport Main from \"../components/GetStarted/main/Main\";\r\nimport Navbar from \"../components/GetStarted/header/Navbar\";\r\nimport FAQ from \"../components/GetStarted/FAQ/FAQ\";\r\nimport Footer from \"../components/GetStarted/footer/Footer\";\r\nimport GSLangContProv from \"../contexts/GetStartedLangContext\";\r\n\r\nconst GetStarted = ({ isLang, setIsLang, setLang, lang }: any) => {\r\n  return (\r\n    <GSLangContProv provValue={lang}>\r\n      <Navbar isLang={isLang} setIsLang={setIsLang} setLang={setLang} />\r\n      <Header />\r\n      <Main />\r\n      <FAQ />\r\n      <Footer isLang={isLang} setIsLang={setIsLang} setLang={setLang} />\r\n    </GSLangContProv>\r\n  );\r\n};\r\n\r\nexport default GetStarted;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,IAAI,MAAM,oCAAoC;AACrD,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,GAAG,MAAM,kCAAkC;AAClD,OAAOC,MAAM,MAAM,wCAAwC;AAC3D,OAAOC,cAAc,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,UAAU,GAAGC,IAAA,IAA+C;EAAA,IAA9C;IAAEC,MAAM;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAC3D,oBACEF,OAAA,CAACF,cAAc;IAACS,SAAS,EAAED,IAAK;IAAAE,QAAA,gBAC9BR,OAAA,CAACL,MAAM;MAACQ,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACC,OAAO,EAAEA;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClEZ,OAAA,CAACP,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVZ,OAAA,CAACN,IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACRZ,OAAA,CAACJ,GAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACPZ,OAAA,CAACH,MAAM;MAACM,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA,SAAU;MAACC,OAAO,EAAEA;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAErB,CAAC;AAACC,EAAA,GAVIZ,UAAU;AAYhB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}