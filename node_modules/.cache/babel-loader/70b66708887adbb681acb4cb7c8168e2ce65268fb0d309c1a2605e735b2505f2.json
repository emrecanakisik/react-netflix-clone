{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\pages\\\\GetStarted-Login\\\\GetStartedError.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetStartedError = () => {\n  const url = window.location;\n  if (url.pathname === \"/nl\") {\n    console.log(url.pathname);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"GetStartedError\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_c = GetStartedError;\nexport default GetStartedError;\nvar _c;\n$RefreshReg$(_c, \"GetStartedError\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GetStartedError","url","window","location","pathname","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/pages/GetStarted-Login/GetStartedError.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\n\r\ntype langState = {\r\n  isLang: string;\r\n  setIsLang: string;\r\n};\r\n\r\nconst GetStartedError = () => {\r\n  const url = window.location;\r\n  if (url.pathname === \"/nl\") {\r\n    console.log(url.pathname);\r\n  }\r\n\r\n  return <div>GetStartedError</div>;\r\n};\r\n\r\nexport default GetStartedError;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAsB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO1C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,GAAG,GAAGC,MAAM,CAACC,QAAQ;EAC3B,IAAIF,GAAG,CAACG,QAAQ,KAAK,KAAK,EAAE;IAC1BC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,QAAQ,CAAC;EAC3B;EAEA,oBAAOL,OAAA;IAAAQ,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AACnC,CAAC;AAACC,EAAA,GAPIZ,eAAe;AASrB,eAAeA,eAAe;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}