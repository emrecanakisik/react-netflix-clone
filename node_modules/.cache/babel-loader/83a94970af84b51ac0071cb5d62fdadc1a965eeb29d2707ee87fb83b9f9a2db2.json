{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Login from \"./pages/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [loginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n  const isLangContext = /*#__PURE__*/createContext({\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    loginLang,\n    setLoginLang\n  });\n  let langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    loginLang,\n    setLoginLang\n  };\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(isLangContext.Provider, {\n      value: langData,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: GSLang.link,\n          element: /*#__PURE__*/_jsxDEV(GetStarted, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            lang: GSLang,\n            setLang: setGSLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Uif2e7O0OOQF4Gnl7yvIc1wmAg4=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createContext","GetStarted","Login","Routes","Route","useNavigate","getStartedPageLang","loginPageLang","jsxDEV","_jsxDEV","App","_s","isLang","setIsLang","GSLang","setGSLang","english","loginLang","setLoginLang","navigate","isLangContext","langData","children","Provider","value","path","link","element","lang","setLang","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted\";\nimport Login from \"./pages/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [loginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  const isLangContext = createContext({\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    loginLang,\n    setLoginLang,\n  });\n  let langData = {\n    isLang,\n    setIsLang,\n    GSLang,\n    setGSLang,\n    loginLang,\n    setLoginLang,\n  };\n\n  /*  useEffect(() => {\n    navigate(\"/nl-en\");\n  }, []); */\n\n  return (\n    <div>\n      <isLangContext.Provider value={langData}>\n        <Routes>\n          <Route\n            path={GSLang.link}\n            element={\n              <GetStarted\n                isLang={isLang}\n                setIsLang={setIsLang}\n                lang={GSLang}\n                setLang={setGSLang}\n              />\n            }\n          />\n          <Route path=\"/login\" element={<Login />} />\n        </Routes>\n      </isLangContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAaC,aAAa,QAAQ,OAAO;AACjE,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,MAAM,EAAEC,KAAK,EAAiBC,WAAW,QAAQ,kBAAkB;AAC5E,SACEC,kBAAkB,QACb,kCAAkC;AACzC,SAASC,aAAa,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,SAAS,CAAC;EAC/C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACO,kBAAkB,CAACU,OAAO,CAAC;EAChE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAACQ,aAAa,CAACS,OAAO,CAAC;EACjE,MAAMG,QAAQ,GAAGd,WAAW,EAAE;EAE9B,MAAMe,aAAa,gBAAGpB,aAAa,CAAC;IAClCY,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTE,SAAS;IACTC;EACF,CAAC,CAAC;EACF,IAAIG,QAAQ,GAAG;IACbT,MAAM;IACNC,SAAS;IACTC,MAAM;IACNC,SAAS;IACTE,SAAS;IACTC;EACF,CAAC;;EAED;AACF;AACA;;EAEE,oBACET,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACW,aAAa,CAACG,QAAQ;MAACC,KAAK,EAAEH,QAAS;MAAAC,QAAA,eACtCb,OAAA,CAACN,MAAM;QAAAmB,QAAA,gBACLb,OAAA,CAACL,KAAK;UACJqB,IAAI,EAAEX,MAAM,CAACY,IAAK;UAClBC,OAAO,eACLlB,OAAA,CAACR,UAAU;YACTW,MAAM,EAAEA,MAAO;YACfC,SAAS,EAAEA,SAAU;YACrBe,IAAI,EAAEd,MAAO;YACbe,OAAO,EAAEd;UAAU;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAEtB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACD,eACFxB,OAAA,CAACL,KAAK;UAACqB,IAAI,EAAC,QAAQ;UAACE,OAAO,eAAElB,OAAA,CAACP,KAAK;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACc;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEV;AAACtB,EAAA,CA/CQD,GAAG;EAAA,QAIOL,WAAW;AAAA;AAAA6B,EAAA,GAJrBxB,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}