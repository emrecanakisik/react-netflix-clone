{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emrec\\\\Desktop\\\\react-netflix-clone\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport { getStartedPageLang } from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(GetStartedError, {\n          isLang: isLang,\n          setIsLang: setIsLang,\n          GSLang: GSLang,\n          setGSLang: setGSLang,\n          loginLang: LoginLang,\n          setLoginLang: setLoginLang\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/${GSLang.link}`,\n        element: /*#__PURE__*/_jsxDEV(GetStartedLoginLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 50\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(GetStarted, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            isLang: isLang,\n            setIsLang: setIsLang,\n            GSLang: GSLang,\n            setGSLang: setGSLang,\n            loginLang: LoginLang,\n            setLoginLang: setLoginLang\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(GetStartedError, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MX+uh6GfcEmOd/O2D4PaVpTLoec=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GetStarted","Login","Routes","Route","useNavigate","getStartedPageLang","loginPageLang","GetStartedLoginLayout","GetStartedError","jsxDEV","_jsxDEV","App","_s","isLang","setIsLang","GSLang","setGSLang","english","LoginLang","setLoginLang","navigate","children","path","element","loginLang","fileName","_jsxFileName","lineNumber","columnNumber","link","index","_c","$RefreshReg$"],"sources":["C:/Users/emrec/Desktop/react-netflix-clone/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport \"./App.css\";\nimport GetStarted from \"./pages/GetStarted-Login/GetStarted\";\nimport Login from \"./pages/GetStarted-Login/Login\";\nimport { Routes, Route, Link, NavLink, useNavigate } from \"react-router-dom\";\nimport GSLangContProv, {\n  getStartedPageLang,\n} from \"./contexts/GetStartedLangContext\";\nimport { loginPageLang } from \"./contexts/LoginLangContext\";\nimport GetStartedLoginLayout from \"./pages/GetStarted-Login/Index\";\nimport GetStartedError from \"./pages/GetStarted-Login/GetStartedError\";\n\nexport type langprops = {\n  isLang?: string;\n  setIsLang: string;\n  GSLang?: object;\n  setGSLang: object;\n  loginLang?: object;\n  setLoginLang: object;\n  page?: \"GetStarted\" | \"Login\";\n};\n\nfunction App() {\n  const [isLang, setIsLang] = useState(\"English\");\n  const [GSLang, setGSLang] = useState(getStartedPageLang.english);\n  const [LoginLang, setLoginLang] = useState(loginPageLang.english);\n  const navigate = useNavigate();\n\n  /* useEffect(() => {\n    isLang === \"English\" ? navigate(\"/nl-en\") : navigate(\"/nl\");\n  }, []); */\n\n  return (\n    <div>\n      <Routes>\n        <Route\n          path=\"*\"\n          element={\n            <GetStartedError\n              isLang={isLang}\n              setIsLang={setIsLang}\n              GSLang={GSLang}\n              setGSLang={setGSLang}\n              loginLang={LoginLang}\n              setLoginLang={setLoginLang}\n            />\n          }\n        />\n        <Route path={`/${GSLang.link}`} element={<GetStartedLoginLayout />}>\n          <Route\n            index={true}\n            element={\n              <GetStarted\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n          <Route\n            path=\"login\"\n            element={\n              <Login\n                isLang={isLang}\n                setIsLang={setIsLang}\n                GSLang={GSLang}\n                setGSLang={setGSLang}\n                loginLang={LoginLang}\n                setLoginLang={setLoginLang}\n              />\n            }\n          />\n          <Route path=\"*\" element={<GetStartedError />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}